<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "mybatis-3-mapper.dtd">
<mapper namespace="com.bdqn.mall.dao.UserMapper">
    <resultMap id="userMap" type="user">
        <id property="userId" column="userId"/>
        <result property="userName" column="userName"/>
        <result property="userNickName" column="userNickName"/>
        <result property="userPassword" column="userPassword"/>
        <result property="userRealName" column="userRealName"/>
        <result property="userGender" column="userGender"/>
        <result property="userBirthday" column="userBirthday"/>
        <result property="userProfilePictureSrc" column="userProfilePictureSrc"/>
        <association property="userAddress" javaType="com.bdqn.mall.entity.Address">
            <id property="addressAreaId" column="userAddress"/>
        </association>
        <association property="userHomePlace" javaType="com.bdqn.mall.entity.Address">
            <id property="addressAreaId" column="userHomePlace"/>
        </association>
    </resultMap>

    <insert id="insertOne" parameterType="user">
        INSERT INTO user(userId,userName,userNickName,userPassword,userRealName,userGender,userBirthday,userProfilePictureSrc,userAddress,userHomePlace)
            VALUES (
            null,
            #{user.userName},
            #{user.userNickName},
            #{user.userPassword},
            #{user.userRealName},
            #{user.userGender},
            #{user.userBirthday},
            #{user.userProfilePictureSrc},
            #{user.userAddress.addressAreaId},
            #{user.userHomePlace.addressAreaId})
    </insert>

    <update id="updateOne" parameterType="user">
        UPDATE user
        <set>
            <if test="user.userPassword != null">userPassword = #{user.userPassword},</if>
            <if test="user.userNickName != null">userNickName = #{user.userNickName},</if>
            <if test="user.userRealName != null">userRealName = #{user.userRealName},</if>
            <if test="user.userGender != null">userGender = #{user.userGender},</if>
            <if test="user.userBirthday != null">userBirthday = #{user.userBirthday},</if>
            <if test="user.userProfilePictureSrc != null">
                userProfilePictureSrc = #{user.userProfilePictureSrc},
            </if>
            <if test="user.userAddress != null">
                userAddress = #{user.userAddress.addressAreaId},
            </if>
        </set>
        <where>
            userId = #{user.userId}
        </where>
    </update>
    <select id="select" resultMap="userMap">
        SELECT userId,userName,userNickName,userPassword,userRealName,userGender,userBirthday,userProfilePictureSrc,userAddress,userHomePlace FROM user
        <if test="user != null">
            <where>
                <if test="user.userName != null">
                    (userName LIKE concat('%',#{user.userName},'%') or userNickName LIKE concat('%',#{user.userName},'%'))
                </if>
                <if test="user.userGender != null">
                    and userGender = #{user.userGender}
                </if>
            </where>
        </if>
        <if test="orderUtil != null">
            ORDER BY ${orderUtil.orderBy}<if test="orderUtil.isDesc">desc </if>
        </if>
        <if test="pageUtil != null">
            LIMIT #{pageUtil.pageStart},#{pageUtil.count}
        </if>
    </select>
    <select id="selectOne" resultMap="userMap" parameterType="int">
        SELECT userId,userName,userNickName,userPassword,userRealName,userGender,userBirthday,userProfilePictureSrc,userAddress,userHomePlace FROM user
        <where>
            userId = #{userId}
        </where>
    </select>
    <select id="selectByLogin" resultMap="userMap">
        SELECT userId,userName,userNickName,userPassword,userRealName,userGender,userBirthday,userProfilePictureSrc,userAddress,userHomePlace FROM user
        <where>
            userName = #{userName} and userPassword = #{userPassword}
        </where>
    </select>
    <select id="selectTotal" resultType="int" parameterType="string">
        SELECT COUNT(userId) FROM user
        <if test="user != null">
            <where>
                <if test="user.userName != null">
                    (userName LIKE concat('%',#{user.userName},'%') or userNickName LIKE concat('%',#{user.userName},'%'))
                </if>
                <if test="user.userGender != null">
                    and userGender = #{user.userGender}
                </if>
            </where>
        </if>
    </select>
</mapper>